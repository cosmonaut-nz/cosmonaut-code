{
    "title": "SourceFileReview",
    "description": "A source file review data object that captures the elements of the review.",
    "type": "object",
    "properties": {
        "source_file_info": {
            "$ref": "#/$defs/sourceFileInfo",
            "description": "The details of the source file being reviewed"
        },
        "file_rag_status": {
            "type": "string",
            "description": "A RAG status for the file according to the findings",
            "enum": [
                "Red",
                "Amber",
                "Green"
            ]
        },
        "summary": {
            "type": "string",
            "description": "A brief and concise summary of what the source file functionally does and of the findings during the code review ensuring that the summary reflects the findings, such as security_issues, errors or improvements."
        },
        "errors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/error"
            },
            "description": "A list of syntatic or idiomatic errors (not security related) found in the code giving the issue and potential resolution for each. Where the code does not meet language standards, best practice or clearly deviates from DRY or SOLID principles"
        },
        "security_issues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/securityIssue"
            },
            "description": "A list of security issues, threats or vulnerabilities, such as listed by OWASP, or CVE security vulnerability, etc. Give the threat (and reference, such as listed by OWASP, CVE or any other security frameworks) and mitigation for each"
        },
        "improvements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/improvement"
            },
            "description": "A list of non-critical code improvements that will improve code quality, readability and maintainability, giving a suggestion and concrete actionable example for each"
        }
    },
    "required": [
        "source_file_info",
        "summary"
    ],
    "$defs": {
        "sourceFileInfo": {
            "type": "object",
            "$ref": "#/$defs/statistics",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the file, including the extension"
                },
                "relative_path": {
                    "type": "string",
                    "description": "The relative path of the file, including the file name and extension"
                },
                "language": {
                    "type": "languageType",
                    "description": "The details of the language the file is written in"
                },
                "id_hash": {
                    "type": "string",
                    "description": "A hash of the contents of the source file as SHA256. Leave as zero."
                },
                "statistics": {
                    "type": "Statistics",
                    "$ref": "#/$defs/statistics",
                    "description": "Statistics for this SourceFileInfo"
                }
            },
            "required": [
                "name",
                "relative_path",
                "statistics"
            ]
        },
        "error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Where in the code the error was found. Include line of code"
                },
                "issue": {
                    "type": "string",
                    "description": "An error which will directly impact the function or performance of the code. An error is where the code is clearly non-adherent to language standards, best practice or clearly deviates from DRY or SOLID principles."
                },
                "resolution": {
                    "type": "string",
                    "description": "A description of how the error can be resolved the error"
                }
            },
            "required": [
                "code",
                "issue",
                "resolution"
            ]
        },
        "securityIssue": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string",
                    "description": "Where the severity strictly aligns to a value found in the Common Vulnerability Scoring System (CVSS), version 3.1.",
                    "enum": [
                        "Low",
                        "Medium",
                        "High",
                        "Critical"
                    ]
                },
                "code": {
                    "type": "string",
                    "description": "Where in the code the issue was found. Include line of code"
                },
                "threat": {
                    "type": "string",
                    "description": "A description of the threat or vulnerability, such as listed by OWASP, or CVE security vulnerability, etc. Detail the implications of the threat."
                },
                "mitigation": {
                    "type": "string",
                    "description": "A description of how the threat can be mitigated"
                }
            },
            "required": [
                "severity",
                "code",
                "threat",
                "mitigation"
            ]
        },
        "improvement": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Where in the code improvement can be made. Include the line of code as a snippet. Include the line number"
                },
                "suggestion": {
                    "type": "string",
                    "description": "A suggested improvement to the code, why and what can be done"
                },
                "improvement_details": {
                    "type": "string",
                    "description": "Code that will make the improvement. Ensure the code is functionally complete and can be easily implemented in the source file you have reviewed. The code MUST align with the language of the source file"
                }
            },
            "required": [
                "code",
                "suggestion",
                "improvement_details"
            ]
        },
        "languageType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The language the code is in, e.g., 'Rust', 'C#', 'Java', etc."
                },
                "extension": {
                    "type": "string",
                    "description": "The file extension of the file, e.g., '.rs' or '.cs', etc."
                },
                "statistics": {
                    "type": "statistics",
                    "$ref": "#/$defs/statistics",
                    "description": "Statistics for this LanguageType"
                }
            },
            "required": [
                "name",
                "extension",
                "statistics"
            ]
        },
        "statistics": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "integer",
                    "description": "The size of the file, in bytes. Leave as zero."
                },
                "loc": {
                    "type": "integer",
                    "description": "The number of lines of code found in the file. Excluding comment lines or blocks. Leave as zero."
                },
                "num_files": {
                    "type": "integer",
                    "description": "A roll-up of all files. Leave as zero."
                },
                "num_commits": {
                    "type": "integer",
                    "description": "A roll-up of all commits. Leave as zero."
                },
                "frequency": {
                    "type": "float",
                    "description": "The frequency of commits to the repository, as a ratio of commits to total commits in the repository. Leave as zero."
                }
            },
            "required": []
        }
    }
}